const t=[];let n=1;const c={async register(r){if(await new Promise(s=>setTimeout(s,500)),t.find(s=>s.email===r.email))return{success:!1,error:"User with this email already exists"};const e={id:n.toString(),name:r.name,email:r.email,phone:r.phone,role:"CUSTOMER",isVerified:!0,isActive:!0,createdAt:new Date().toISOString()};n++,t.push(e);const o=`mock-jwt-token-${e.id}-${Date.now()}`;return console.log("✅ Mock user registered:",e),{success:!0,data:{user:e,token:o,message:"User registered successfully"},message:"User registered successfully"}},async login(r,i){await new Promise(s=>setTimeout(s,500));const e=t.find(s=>s.email===r);if(!e)return{success:!1,error:"Invalid email or password"};if(!i||i.trim()==="")return{success:!1,error:"Invalid email or password"};const o=`mock-jwt-token-${e.id}-${Date.now()}`;return console.log("✅ Mock user logged in:",e),{success:!0,data:{user:e,token:o,message:"Login successful"},message:"Login successful"}},isMockMode(){return!1},getUsers(){return t}};export{c as mockApiService};
